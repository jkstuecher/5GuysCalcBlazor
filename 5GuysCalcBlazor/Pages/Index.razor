@using _5GuysCalcBlazor;
@using _5GCalc.Models;
@inject HttpClient Http;
@inject NavigationManager Navigator;
@inject IJSRuntime JsRuntime

@page "/"
<div class="checkered-border top"></div>
<br />
<div class="container-fluid">
    <!--top-->
    <div class="row">
        <!--top row-->
        <div class="col-md-2">
            <img src="images/logo.jpg" alt="Five Guys Logo" />
        </div>

        <style>
            h1 {
                color: #c82026;
                font-family: "Helvetica Black","Arial Black","Helvetica", "Arial",sans-serif;
            }
        </style>

        <div class="col-md-10">
            <h1>Five Guys <br />Nutrition Calculator</h1>
        </div>
    </div><!--top row-->
</div><!--top-->

<div class="container-fluid">
    <!--Nutrition and Menu-->
    <div class="row">
        <div class="col-md-6">
            <!--nutrition label-->
            <hr />
            <section class="performance-facts">
                <header class="performance-facts__header">
                    <h1 class="performance-facts__title">Nutrition Facts</h1>
                        Serving Details:
                        <p>@((MarkupString)SelectionString)</p>
                        <p><a @onclick="ClearSelection" href="#">Reset Selection</a></p>
                       
                    <hr style="margin-bottom:0px">
                </header>
                <table class="performance-facts__table">
                    <tbody>
                        <tr>
                            <th style="text-align: left;" colspan="2">
                                <div id="Calories">Calories: @(calorieTotal)g</div>
                            </th>
                        </tr>

                        <tr>
                            <th style="text-align: left;" colspan="2">
                                <div id="Fat">Fat:@(fatTotal)g</div>
                            </th>
                        </tr>

                        <tr>
                            <th style="text-align: left;" colspan="2">
                                <div id="Sodium">Sodium: @(sodiumTotal)g</div>
                            </th>
                        </tr>
                        <tr>
                            <th style="text-align: left;" colspan="2">
                                <div id="Carbs">Total Carbs: @(carbsTotal)g</div>
                            </th>
                        </tr>

                        <tr>
                            <th style="text-align: left;" colspan="2">
                                <div id="Fiber">Fiber: @(fiberTotal)g</div>
                            </th>
                        </tr>

                        <tr>
                            <th style="text-align: left;" colspan="2">
                                <div id="Protein">Protein: @(proteinTotal)g</div>
                            </th>
                        </tr>
                    </tbody>
                </table>
            </section>
        </div><!--nutrition label-->

        <div class="col-md-6 col">
            <!--menu options-->
            <hr />
            <div class="container-fluid">
                <div class="panel-group" id="accordion">
                    @{
                        foreach (var menuSection in menu.Sections)
                        {
                            var collapseStyle = "collapse"; // firstsection ? "collapse in" : "collapse";
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#@menuSection.Replace(' ', '_')">@menuSection</a>
                                    </h4>
                                </div>
                                <div id="@menuSection.Replace(' ', '_')" class="panel-collapse @collapseStyle">
                                    <div class="panel-body">
                                        <table class="table table-hover clickable-row">
                                            <thead>
                                                <tr>
                                                    <th>Item</th>
                                                    <th>Cals</th>
                                                    <th class="visible-lg">Fat</th>
                                                    <th class="visible-lg">Sodium</th>
                                                    <th class="hidden-xs">Carbs</th>
                                                    <th class="visible-lg">Fiber</th>
                                                    <th class="hidden-xs">Protein</th>
                                                </tr>
                                            </thead>
                                            @{
                                                var items = menu.Items.Where(x => x.Section == menuSection).ToList();
                                                foreach (var i in items)
                                                {
                                                    var itemID = i.ItemName?.Replace(' ', '_');
                                                    itemID = itemID?.Replace('.', '-');
                                                    <tr id="row_@itemID">
                                                        <td>
                                                            @*<input type="checkbox" id="cb_@itemID" @onclick="CheckChanged(itemID)" />*@
                                                            <input type="checkbox" id="cb_@itemID" @onclick="() => CheckChanged(itemID)" />
                                                            <a href="javascript:hyperlinkSelector('@itemID','#yourSelection', '@Navigator.BaseUri');" id="Link_@itemID" @onclick="() => CheckChanged(itemID)">@i.ItemName</a>
                                                        </td>
                                                        <td>@i.Calories</td>
                                                        <td class="visible-lg">@i.TotalFat</td>
                                                        <td class="visible-lg">@i.Sodium</td>
                                                        <td class="hidden-xs">@i.Carbs</td>
                                                        <td class="visible-lg">@i.Fiber</td>
                                                        <td class="hidden-xs">@i.Protein</td>
                                                    </tr>
                                                }
                                            }
                                        </table>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div><!--menu options-->
    </div><!--row-->
</div><!--Nutrition and Menu-->





@code{
    Menu menu { get; set; } = new Menu();

    List<MenuItem> menuSelection { get; set; } = new List<MenuItem>();

    string SelectionString = "";

    int calorieTotal = 0;
    int fatTotal = 0;
    int sodiumTotal = 0;
    double carbsTotal = 0;
    int fiberTotal = 0;
    double proteinTotal = 0;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var itemList = await Http.GetFromJsonAsync<MenuItem[]>("sample-data/menuitems.json");
            menu.Items = itemList?.ToList();
            menu.Sections = itemList.Select(i => i.Section).Distinct().ToList();
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }

    private void CheckChanged(string itemID)
    {
        itemID = itemID.Replace('_', ' ');
        if (menuSelection.Where(m=>m.ItemName == itemID).Count() == 1)
        {
            //remove the menu item
            menuSelection.RemoveAll(m => m.ItemName == itemID);
        }
        else
        {
            //add menuItem
            MenuItem mi = menu.Items.Where(m => m.ItemName == itemID).First();
            menuSelection.Add(mi);
        }

        //update totals

        if (menuSelection.Count() > 0)
        {
            calorieTotal = menuSelection.Sum(x => x.Calories);
            fatTotal = menuSelection.Sum(x => x.TotalFat);
            sodiumTotal = menuSelection.Sum(x => x.Sodium);
            carbsTotal = menuSelection.Sum(x => x.Carbs);
            fiberTotal = menuSelection.Sum(x => x.Fiber);
            proteinTotal = menuSelection.Sum(x => x.Protein);
            SelectionString = "<ul>";
            foreach (var mi in menuSelection)
            {
                SelectionString += "<li>" + mi.ItemName + "</li>"; 
            }
            SelectionString += "</ul>";
        }
        else //clear selection
        {
            calorieTotal = 0;
            fatTotal = 0;
            sodiumTotal = 0;
            carbsTotal = 0;
            fiberTotal = 0;
            proteinTotal = 0;
            SelectionString = "";
        }
    }

    private void ClearSelection()
    {
        menuSelection.Clear();
        SelectionString = "";
        JsRuntime.InvokeVoidAsync("uncheckAll");
        calorieTotal = 0;
        fatTotal = 0;
        sodiumTotal = 0;
        carbsTotal = 0;
        fiberTotal = 0;
        proteinTotal = 0;
        SelectionString = "";
    }
}